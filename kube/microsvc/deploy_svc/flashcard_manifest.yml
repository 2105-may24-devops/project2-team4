apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: flashcard-deploy
spec:
  serviceName: flashcard-svc
  selector:
    matchLabels:
      stack: backend
      app: flashcard
  replicas: 2
  strategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: fcdb-pvc
      spec:
        storageClassName: default
        resources:
          requests:
            storage: "1Gi"
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
  template:
    metadata:
      labels:
        stack: backend
        app: flashcard
    spec:
      containers:
      - name: flashcard
        image: <Image> # TODO: Placeholder
        resources:
          limits:
            memory: "1Gi"
            cpu: "1000m"
        ports:
        - containerPort: 8089
        volumeMounts: 
        - name: embed-db
          mountPath: /app/dbdata/
        env:
        - name: spring.kafka.consumer.bootstrap-servers
          value: kafka-svc:9092 
        - name: spring.kafka.producer.bootstrap-servers
          value: kafka-svc:9092 
        envFrom:
        - configMapRef:
            name: consul-connection
        - configMapRef:
            name: db-info
      volumes: 
      - name: embed-db 
        persistentVolumeClaim:
          claimName: fcdb-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: flashcard-svc
spec:
  type: ClusterIP
  selector:
    stack: backend
    app: flashcard
  ports:
  - port: 8089
    name: fc-port
